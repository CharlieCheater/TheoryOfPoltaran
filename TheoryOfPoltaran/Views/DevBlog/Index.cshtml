@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div id="app" v-cloak>
    <template>
        <div>
            <p v-html="test"></p>
            <h1 style="text-align:center;">Дневник разработки</h1>
            <h2 v-if="blogData.length == 0" style="text-align:center;">На данный момент постов нет</h2>
            <div v-for="post in blogData" v-key="post.id">
                <div class="row">
                    <div class="col">
                        <h3>{{ post.title }}</h3>

                    </div>
                    <div class="col col-sm-10">
                        <button v-if="showBtn" class="btn-danger">Удалить</button>
                    </div>
                </div>
                <p>{{ post.description }}</p>
                <button v-on:click="getPage(post.id)" class="btn-danger">Подробнее</button>
            </div>
            <v-pagination v-if="total != 0" v-model="currentPage" :page-count="total" :classes="bootstrapPaginationClasses"
                          :labels="paginationAnchorTexts"></v-pagination>
        </div>
    </template>
</div>
<script src="~/js/axios.min.js"></script>
<script src="//unpkg.com/vue"></script>
<script  src="//unpkg.com/vue-plain-pagination"></script>
<script type="module">
    Vue.component('v-pagination', window['vue-plain-pagination'])

    new Vue({
        el: '#app',
        data: {
            blogData: [],
            currentPage: 1,
            total: 9,
            showBtn: false,
            bootstrapPaginationClasses: {
                ul: 'pagination',
                li: 'page-item',
                liActive: 'active',
                liDisable: 'disabled',
                button: 'bg-dark page-link'
            },
            paginationAnchorTexts: {
                first: 'First',
                prev: 'Previous',
                next: 'Next',
                last: 'Last'
            }
        },
        mounted() {
            this.getPagesInfo();
        },
        watch: {
            currentPage: function (v) {
                this.getPage(v);
            }
        },
        methods: {
            getPagesInfo() {
                let th = this;
                axios.get('/devblog/GetFirstData/')
                    .then(function (response) {
                        th.total = response.data.totalPages;
                        th.showBtn = response.data.showBtn;
                        th.getPage(th.currentPage);
                    })
                    .catch(function (error) {
                        console.log(error);
                    })
            },
            getPage(pg) {
                let th = this;
                axios.get('/devblog/GetPage?page=' + pg)
                    .then(function (response) {
                        th.blogData = response.data;

                    })
                    .catch(function (error) {
                        console.log(error);
                    })
            }
        }

    })
</script>